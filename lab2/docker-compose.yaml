version: '3.8'

services:
  postgres:
    image: postgres:17-alpine
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: django
      POSTGRES_PASSWORD: 123456789
      POSTGRES_DB: lab1_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:  # Добавил healthcheck
      test: ["CMD-SHELL", "pg_isready -U django -d lab1_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
    ports:
      - "5050:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  migration-service:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: sh -c "python manage.py migrate && python manage.py collectstatic --noinput"
    depends_on:
      postgres:
        condition: service_healthy  # Ждем готовности БД
    volumes:
      - ./backend:/backend

  backend-service:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: gunicorn lab1.wsgi:application --bind 0.0.0.0:8000
    ports: 
      - "8000:8000"
    depends_on:
      - migration-service  # Зависимость от миграций
    volumes:
      - ./backend:/backend
      - static_volume:/backend/static

  nginx-service:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend-service
    volumes:
      - static_volume:/static
      - ./nginx/templates:/etc/nginx/templates

volumes:
  postgres_data:
  pgadmin_data:
  static_volume: